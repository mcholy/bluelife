// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository;

#nullable disable

namespace BlueLife.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20230722010126_AddEntities")]
    partial class AddEntities
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Entities.Models.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("ApMaterno")
                        .HasColumnType("longtext");

                    b.Property<string>("ApPaterno")
                        .HasColumnType("longtext");

                    b.Property<string>("Celular")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateEntry")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateModify")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DiasRecompra")
                        .HasColumnType("longtext");

                    b.Property<string>("Direccion")
                        .HasColumnType("longtext");

                    b.Property<string>("Documento")
                        .HasColumnType("longtext");

                    b.Property<string>("Estado")
                        .HasColumnType("longtext");

                    b.Property<Guid>("IdProducto")
                        .HasColumnType("char(36)");

                    b.Property<int>("IdUserEntry")
                        .HasColumnType("int");

                    b.Property<int>("IdUserModify")
                        .HasColumnType("int");

                    b.Property<string>("Localizacion")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("ProductoId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Referencia")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ProductoId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Entities.Models.Movimiento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<decimal?>("Cantidad")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("DateEntry")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateModify")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Estado")
                        .HasColumnType("longtext");

                    b.Property<int>("IdUserEntry")
                        .HasColumnType("int");

                    b.Property<int>("IdUserModify")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("ProductoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("TipoMovimientoId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ProductoId");

                    b.HasIndex("TipoMovimientoId");

                    b.ToTable("Movimientos");
                });

            modelBuilder.Entity("Entities.Models.Producto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DateEntry")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateModify")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Estado")
                        .HasColumnType("longtext");

                    b.Property<int>("IdUserEntry")
                        .HasColumnType("int");

                    b.Property<int>("IdUserModify")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("Entities.Models.Reparto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Comentario")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateEntry")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateModify")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Estado")
                        .HasColumnType("longtext");

                    b.Property<string>("EstadoReparto")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Fecha_Entrega")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdUserEntry")
                        .HasColumnType("int");

                    b.Property<int>("IdUserModify")
                        .HasColumnType("int");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Repartos");
                });

            modelBuilder.Entity("Entities.Models.RepartoDetalle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Cantidad")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("DateEntry")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateModify")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Estado")
                        .HasColumnType("longtext");

                    b.Property<int>("IdUserEntry")
                        .HasColumnType("int");

                    b.Property<int>("IdUserModify")
                        .HasColumnType("int");

                    b.Property<Guid>("ProductoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("RepartoId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ProductoId");

                    b.HasIndex("RepartoId");

                    b.ToTable("RepartoDetalles");
                });

            modelBuilder.Entity("Entities.Models.TipoMovimiento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DateEntry")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateModify")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Estado")
                        .HasColumnType("longtext");

                    b.Property<int>("IdUserEntry")
                        .HasColumnType("int");

                    b.Property<int>("IdUserModify")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TipoMovimientos");
                });

            modelBuilder.Entity("Entities.Models.TipoUsuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DateEntry")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateModify")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Estado")
                        .HasColumnType("longtext");

                    b.Property<int>("IdUserEntry")
                        .HasColumnType("int");

                    b.Property<int>("IdUserModify")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TipoUsuarios");
                });

            modelBuilder.Entity("Entities.Models.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Contraseña")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateEntry")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateModify")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Estado")
                        .HasColumnType("longtext");

                    b.Property<int>("IdUserEntry")
                        .HasColumnType("int");

                    b.Property<int>("IdUserModify")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("TipoUsuarioId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("TipoUsuarioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Entities.Models.Cliente", b =>
                {
                    b.HasOne("Entities.Models.Producto", "Producto")
                        .WithMany("Clientes")
                        .HasForeignKey("ProductoId");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Entities.Models.Movimiento", b =>
                {
                    b.HasOne("Entities.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId");

                    b.HasOne("Entities.Models.TipoMovimiento", "TipoMovimiento")
                        .WithMany()
                        .HasForeignKey("TipoMovimientoId");

                    b.Navigation("Producto");

                    b.Navigation("TipoMovimiento");
                });

            modelBuilder.Entity("Entities.Models.Reparto", b =>
                {
                    b.HasOne("Entities.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Entities.Models.RepartoDetalle", b =>
                {
                    b.HasOne("Entities.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Models.Reparto", "Reparto")
                        .WithMany()
                        .HasForeignKey("RepartoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Reparto");
                });

            modelBuilder.Entity("Entities.Models.Usuario", b =>
                {
                    b.HasOne("Entities.Models.TipoUsuario", "TipoUsuario")
                        .WithMany()
                        .HasForeignKey("TipoUsuarioId");

                    b.Navigation("TipoUsuario");
                });

            modelBuilder.Entity("Entities.Models.Producto", b =>
                {
                    b.Navigation("Clientes");
                });
#pragma warning restore 612, 618
        }
    }
}
